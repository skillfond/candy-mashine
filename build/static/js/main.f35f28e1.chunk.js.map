{"version":3,"sources":["candy-machine.ts","connection.tsx","MintCountdown.tsx","MintButton.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils.ts"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","account","candyMachine","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","presale","whitelistMintSettings","goLiveDate","Date","getTime","id","isSoldOut","isActive","endSettings","endSettingType","date","number","isPresale","treasury","wallet","tokenMint","gatekeeper","hiddenSettings","price","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getCandyMachineCreator","mintOneToken","Keypair","generate","getAtaForMint","publicKey","userTokenAccountAddress","userPayingAccountAddress","candyMachineAddress","remainingAccounts","signers","cleanupInstructions","MintLayout","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","Token","createInitMintInstruction","createMintToInstruction","instructions","getNetworkToken","gatekeeperNetwork","push","expireOnUse","CIVIC","getNetworkExpire","whitelistToken","mode","burnEveryTime","whitelistBurnAuthority","getAccountInfo","createApproveInstruction","createRevokeInstruction","transferAuthority","metadataAddress","masterEdition","candyMachineCreator","creatorBump","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","length","undefined","sendTransactions","txs","map","t","ms","SequenceType","instructionSet","signersSet","sequenceType","Parallel","commitment","successCallback","ind","failCallback","block","WalletNotConnectedError","unsignedTxns","getRecentBlockhash","i","transaction","Transaction","forEach","add","recentBlockhash","blockhash","setSigners","s","partialSign","signAllTransactions","signedTxns","pendingTxns","breakEarlyObject","breakEarly","signedTxnPromise","sendSignedTransaction","signedTransaction","then","catch","reason","StopOnFailure","all","getUnixTs","DEFAULT_TIMEOUT","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","confirmation","Error","error","simulateResult","simulateTransaction","logs","line","startsWith","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","args","encoding","_rpcRequest","res","message","result","onSignature","context","e","useStyles","makeStyles","theme","createStyles","root","display","padding","spacing","margin","marginRight","width","height","flexDirection","alignContent","alignItems","justifyContent","background","color","borderRadius","fontSize","fontWeight","item","MintCountdown","style","onComplete","classes","renderer","days","hours","minutes","seconds","completed","className","Paper","elevation","CTAButton","styled","Button","MintButton","onMint","isMinting","useGateway","requestGatewayToken","gatewayStatus","useState","clicked","setClicked","useEffect","GatewayStatus","ACTIVE","disabled","onClick","variant","CircularProgress","ConnectButton","WalletDialogButton","MintContainer","div","app","list","flexGrow","listD","textAlign","drawerHeader","mixins","toolbar","drawerPaper","backgroundColor","backdropFilter","first","minHeight","position","boxShadow","zIndex","imgFon","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","home","breakpoints","between","box","top","transform","listTedy","flexWrap","imgTedy","minWidth","maxWidth","objectFit","listInfo","marginBottom","borderBottom","buttonWall","marginTop","container","down","up","botText","bottom","left","paper","content","paperFo","foot","imgMint","textH3","faq1","w100","Home","props","styles","open","setOpen","isUserMinting","setIsUserMinting","setCandyMachine","severity","alertState","setAlertState","rpcUrl","rpcHost","useWallet","useMemo","signTransaction","refreshCandyMachineState","useCallback","cndy","document","getElementById","click","connected","mintTxId","txTimeout","msg","code","window","location","reload","indexOf","AppBar","Toolbar","Box","sx","mr","xs","sm","IconButton","size","edge","List","ListItem","src","alt","Link","href","ml","Icon","Drawer","onClose","Divider","Container","paddingTop","Typography","component","disableGutters","disablePadding","toDate","marginLeft","formatNumber","asNumber","clusterUrl","options","autoShowModal","Grid","Accordion","AccordionSummary","expandIcon","AccordionDetails","mt","Snackbar","autoHideDuration","Alert","createTheme","palette","type","primary","main","secondary","typography","fontFamily","h1","h2","h3","h4","h5","h6","body1","body2","caption","subtitle1","subtitle2","button","values","md","lg","xl","shape","process","getCandyMachineId","network","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","App","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSlopeWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","ConnectionProvider","WalletProvider","autoConnect","startDate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","numberFormater","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","val","LAMPORTS_PER_SOL","buyer"],"mappings":"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","file":"static/js/main.f35f28e1.chunk.js","sourcesContent":["import * as anchor from '@project-serum/anchor';\r\n\r\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport { sendTransactions } from './connection';\r\n\r\nimport {\r\n  CIVIC,\r\n  getAtaForMint,\r\n  getNetworkExpire,\r\n  getNetworkToken,\r\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n} from './utils';\r\n\r\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\r\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\r\n);\r\n\r\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\r\n);\r\n\r\ninterface CandyMachineState {\r\n  itemsAvailable: number;\r\n  itemsRedeemed: number;\r\n  itemsRemaining: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  tokenMint: anchor.web3.PublicKey;\r\n  isSoldOut: boolean;\r\n  isActive: boolean;\r\n  isPresale: boolean;\r\n  goLiveDate: anchor.BN;\r\n  price: anchor.BN;\r\n  gatekeeper: null | {\r\n    expireOnUse: boolean;\r\n    gatekeeperNetwork: anchor.web3.PublicKey;\r\n  };\r\n  endSettings: null | [number, anchor.BN];\r\n  whitelistMintSettings: null | {\r\n    mode: any;\r\n    mint: anchor.web3.PublicKey;\r\n    presale: boolean;\r\n    discountPrice: null | anchor.BN;\r\n  };\r\n  hiddenSettings: null | {\r\n    name: string;\r\n    uri: string;\r\n    hash: Uint8Array;\r\n  };\r\n}\r\n\r\nexport interface CandyMachineAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: CandyMachineState;\r\n}\r\n\r\nexport const awaitTransactionSignatureConfirmation = async (\r\n  txid: anchor.web3.TransactionSignature,\r\n  timeout: number,\r\n  connection: anchor.web3.Connection,\r\n  queryStatus = false,\r\n): Promise<anchor.web3.SignatureStatus | null | void> => {\r\n  let done = false;\r\n  let status: anchor.web3.SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId]) {\r\n    connection.removeSignatureListener(subId);\r\n  }\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n};\r\n\r\nconst createAssociatedTokenAccountInstruction = (\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) => {\r\n  const keys = [\r\n    { pubkey: payer, isSigner: true, isWritable: true },\r\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\r\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\r\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new anchor.web3.TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n};\r\n\r\nexport const getCandyMachineState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  candyMachineId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<CandyMachineAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'recent',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\r\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\r\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\r\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\r\n  const presale = state.data.whitelistMintSettings?.presale &&\r\n    (!state.data.goLiveDate || state.data.goLiveDate.toNumber() > new Date().getTime() / 1000);\r\n\r\n  return {\r\n    id: candyMachineId,\r\n    program,\r\n    state: {\r\n      itemsAvailable,\r\n      itemsRedeemed,\r\n      itemsRemaining,\r\n      isSoldOut: itemsRemaining === 0,\r\n      isActive:\r\n        (presale ||\r\n          state.data.goLiveDate.toNumber() < new Date().getTime() / 1000) &&\r\n        (state.endSettings\r\n          ? state.endSettings.endSettingType.date\r\n            ? state.endSettings.number.toNumber() > new Date().getTime() / 1000\r\n            : itemsRedeemed < state.endSettings.number.toNumber()\r\n          : true),\r\n      isPresale: presale,\r\n      goLiveDate: state.data.goLiveDate,\r\n      treasury: state.wallet,\r\n      tokenMint: state.tokenMint,\r\n      gatekeeper: state.data.gatekeeper,\r\n      endSettings: state.data.endSettings,\r\n      whitelistMintSettings: state.data.whitelistMintSettings,\r\n      hiddenSettings: state.data.hiddenSettings,\r\n      price: state.data.price,\r\n    },\r\n  };\r\n};\r\n\r\nconst getMasterEdition = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('edition'),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nconst getMetadata = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport const getCandyMachineCreator = async (\r\n  candyMachine: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport const mintOneToken = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n): Promise<(string | undefined)[]> => {\r\n  const mint = anchor.web3.Keypair.generate();\r\n\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const userPayingAccountAddress = candyMachine.state.tokenMint\r\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\r\n    : payer;\r\n\r\n  const candyMachineAddress = candyMachine.id;\r\n  const remainingAccounts = [];\r\n  const signers: anchor.web3.Keypair[] = [mint];\r\n  const cleanupInstructions = [];\r\n  const instructions = [\r\n    anchor.web3.SystemProgram.createAccount({\r\n      fromPubkey: payer,\r\n      newAccountPubkey: mint.publicKey,\r\n      space: MintLayout.span,\r\n      lamports:\r\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n          MintLayout.span,\r\n        ),\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    Token.createInitMintInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      0,\r\n      payer,\r\n      payer,\r\n    ),\r\n    createAssociatedTokenAccountInstruction(\r\n      userTokenAccountAddress,\r\n      payer,\r\n      payer,\r\n      mint.publicKey,\r\n    ),\r\n    Token.createMintToInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      userTokenAccountAddress,\r\n      payer,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  if (candyMachine.state.gatekeeper) {\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getNetworkToken(\r\n          payer,\r\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    if (candyMachine.state.gatekeeper.expireOnUse) {\r\n      remainingAccounts.push({\r\n        pubkey: CIVIC,\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: (\r\n          await getNetworkExpire(\r\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n          )\r\n        )[0],\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n    }\r\n  }\r\n  if (candyMachine.state.whitelistMintSettings) {\r\n    const mint = new anchor.web3.PublicKey(\r\n      candyMachine.state.whitelistMintSettings.mint,\r\n    );\r\n\r\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\r\n    remainingAccounts.push({\r\n      pubkey: whitelistToken,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\r\n      const whitelistBurnAuthority = anchor.web3.Keypair.generate();\r\n\r\n      remainingAccounts.push({\r\n        pubkey: mint,\r\n        isWritable: true,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: whitelistBurnAuthority.publicKey,\r\n        isWritable: false,\r\n        isSigner: true,\r\n      });\r\n      signers.push(whitelistBurnAuthority);\r\n      const exists =\r\n        await candyMachine.program.provider.connection.getAccountInfo(\r\n          whitelistToken,\r\n        );\r\n      if (exists) {\r\n        instructions.push(\r\n          Token.createApproveInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            whitelistBurnAuthority.publicKey,\r\n            payer,\r\n            [],\r\n            1,\r\n          ),\r\n        );\r\n        cleanupInstructions.push(\r\n          Token.createRevokeInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            payer,\r\n            [],\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (candyMachine.state.tokenMint) {\r\n    const transferAuthority = anchor.web3.Keypair.generate();\r\n\r\n    signers.push(transferAuthority);\r\n    remainingAccounts.push({\r\n      pubkey: userPayingAccountAddress,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: transferAuthority.publicKey,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n\r\n    instructions.push(\r\n      Token.createApproveInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        transferAuthority.publicKey,\r\n        payer,\r\n        [],\r\n        candyMachine.state.price.toNumber(),\r\n      ),\r\n    );\r\n    cleanupInstructions.push(\r\n      Token.createRevokeInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        payer,\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n  const metadataAddress = await getMetadata(mint.publicKey);\r\n  const masterEdition = await getMasterEdition(mint.publicKey);\r\n\r\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\r\n    candyMachineAddress,\r\n  );\r\n\r\n  instructions.push(\r\n    await candyMachine.program.instruction.mintNft(creatorBump, {\r\n      accounts: {\r\n        candyMachine: candyMachineAddress,\r\n        candyMachineCreator,\r\n        payer: payer,\r\n        wallet: candyMachine.state.treasury,\r\n        mint: mint.publicKey,\r\n        metadata: metadataAddress,\r\n        masterEdition,\r\n        mintAuthority: payer,\r\n        updateAuthority: payer,\r\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n        tokenProgram: TOKEN_PROGRAM_ID,\r\n        systemProgram: SystemProgram.programId,\r\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n        recentBlockhashes: anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\r\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n      },\r\n      remainingAccounts:\r\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\r\n    }),\r\n  );\r\n\r\n  try {\r\n    return (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        [instructions, cleanupInstructions],\r\n        [signers, []],\r\n      )\r\n    ).txs.map(t => t.txid);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nexport const shortenAddress = (address: string, chars = 4): string => {\r\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\r\n};\r\n\r\nconst sleep = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import {\r\n  Keypair,\r\n  Commitment,\r\n  Connection,\r\n  RpcResponseAndContext,\r\n  SignatureStatus,\r\n  SimulatedTransactionResponse,\r\n  Transaction,\r\n  TransactionInstruction,\r\n  TransactionSignature,\r\n  Blockhash,\r\n  FeeCalculator,\r\n} from '@solana/web3.js';\r\n\r\nimport { WalletNotConnectedError } from '@solana/wallet-adapter-base';\r\n\r\ninterface BlockhashAndFeeCalculator {\r\n  blockhash: Blockhash;\r\n  feeCalculator: FeeCalculator;\r\n}\r\n\r\nexport const getErrorForTransaction = async (\r\n  connection: Connection,\r\n  txid: string,\r\n) => {\r\n  // wait for all confirmation before geting transaction\r\n  await connection.confirmTransaction(txid, 'max');\r\n\r\n  const tx = await connection.getParsedConfirmedTransaction(txid);\r\n\r\n  const errors: string[] = [];\r\n  if (tx?.meta && tx.meta.logMessages) {\r\n    tx.meta.logMessages.forEach(log => {\r\n      const regex = /Error: (.*)/gm;\r\n      let m;\r\n      while ((m = regex.exec(log)) !== null) {\r\n        // This is necessary to avoid infinite loops with zero-width matches\r\n        if (m.index === regex.lastIndex) {\r\n          regex.lastIndex++;\r\n        }\r\n\r\n        if (m.length > 1) {\r\n          errors.push(m[1]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport enum SequenceType {\r\n  Sequential,\r\n  Parallel,\r\n  StopOnFailure,\r\n}\r\n\r\nexport async function sendTransactionsWithManualRetry(\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[][],\r\n  signers: Keypair[][],\r\n): Promise<(string | undefined)[]> {\r\n  let stopPoint = 0;\r\n  let tries = 0;\r\n  let lastInstructionsLength = null;\r\n  let toRemoveSigners: Record<number, boolean> = {};\r\n  instructions = instructions.filter((instr, i) => {\r\n    if (instr.length > 0) {\r\n      return true;\r\n    } else {\r\n      toRemoveSigners[i] = true;\r\n      return false;\r\n    }\r\n  });\r\n  let ids: string[] = [];\r\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\r\n\r\n  while (stopPoint < instructions.length && tries < 3) {\r\n    instructions = instructions.slice(stopPoint, instructions.length);\r\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\r\n\r\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\r\n    else tries = 0;\r\n\r\n    try {\r\n      if (instructions.length === 1) {\r\n        const id = await sendTransactionWithRetry(\r\n          connection,\r\n          wallet,\r\n          instructions[0],\r\n          filteredSigners[0],\r\n          'single',\r\n        );\r\n        ids.push(id.txid);\r\n        stopPoint = 1;\r\n      } else {\r\n        const { txs } = await sendTransactions(\r\n          connection,\r\n          wallet,\r\n          instructions,\r\n          filteredSigners,\r\n          SequenceType.StopOnFailure,\r\n          'single',\r\n        );\r\n        ids = ids.concat(txs.map(t => t.txid));\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    console.log(\r\n      'Died on ',\r\n      stopPoint,\r\n      'retrying from instruction',\r\n      instructions[stopPoint],\r\n      'instructions length is',\r\n      instructions.length,\r\n    );\r\n    lastInstructionsLength = instructions.length;\r\n  }\r\n\r\n  return ids;\r\n}\r\n\r\nexport const sendTransactions = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructionSet: TransactionInstruction[][],\r\n  signersSet: Keypair[][],\r\n  sequenceType: SequenceType = SequenceType.Parallel,\r\n  commitment: Commitment = 'singleGossip',\r\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => {},\r\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\r\n  block?: BlockhashAndFeeCalculator,\r\n): Promise<{ number: number; txs: { txid: string; slot: number }[] }> => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  const unsignedTxns: Transaction[] = [];\r\n\r\n  if (!block) {\r\n    block = await connection.getRecentBlockhash(commitment);\r\n  }\r\n\r\n  for (let i = 0; i < instructionSet.length; i++) {\r\n    const instructions = instructionSet[i];\r\n    const signers = signersSet[i];\r\n\r\n    if (instructions.length === 0) {\r\n      continue;\r\n    }\r\n\r\n    let transaction = new Transaction();\r\n    instructions.forEach(instruction => transaction.add(instruction));\r\n    transaction.recentBlockhash = block.blockhash;\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n\r\n    if (signers.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n\r\n    unsignedTxns.push(transaction);\r\n  }\r\n\r\n  const signedTxns = await wallet.signAllTransactions(unsignedTxns);\r\n\r\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\r\n\r\n  let breakEarlyObject = { breakEarly: false, i: 0 };\r\n  console.log(\r\n    'Signed txns length',\r\n    signedTxns.length,\r\n    'vs handed in length',\r\n    instructionSet.length,\r\n  );\r\n  for (let i = 0; i < signedTxns.length; i++) {\r\n    const signedTxnPromise = sendSignedTransaction({\r\n      connection,\r\n      signedTransaction: signedTxns[i],\r\n    });\r\n\r\n    signedTxnPromise\r\n      .then(({ txid, slot }) => {\r\n        successCallback(txid, i);\r\n      })\r\n      .catch(reason => {\r\n        // @ts-ignore\r\n        failCallback(signedTxns[i], i);\r\n        if (sequenceType === SequenceType.StopOnFailure) {\r\n          breakEarlyObject.breakEarly = true;\r\n          breakEarlyObject.i = i;\r\n        }\r\n      });\r\n\r\n    if (sequenceType !== SequenceType.Parallel) {\r\n      try {\r\n        await signedTxnPromise;\r\n      } catch (e) {\r\n        console.log('Caught failure', e);\r\n        if (breakEarlyObject.breakEarly) {\r\n          console.log('Died on ', breakEarlyObject.i);\r\n          // Return the txn we failed on by index\r\n          return {\r\n            number: breakEarlyObject.i,\r\n            txs: await Promise.all(pendingTxns),\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      pendingTxns.push(signedTxnPromise);\r\n    }\r\n  }\r\n\r\n  if (sequenceType !== SequenceType.Parallel) {\r\n    await Promise.all(pendingTxns);\r\n  }\r\n\r\n  return { number: signedTxns.length, txs: await Promise.all(pendingTxns) };\r\n};\r\n\r\nexport const sendTransaction = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  awaitConfirmation = true,\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  const rawTransaction = transaction.serialize();\r\n  let options = {\r\n    skipPreflight: true,\r\n    commitment,\r\n  };\r\n\r\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\r\n  let slot = 0;\r\n\r\n  if (awaitConfirmation) {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      DEFAULT_TIMEOUT,\r\n      connection,\r\n      commitment,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    slot = confirmation?.slot || 0;\r\n\r\n    if (confirmation?.err) {\r\n      const errors = await getErrorForTransaction(connection, txid);\r\n\r\n      console.log(errors);\r\n      throw new Error(`Raw transaction ${txid} failed`);\r\n    }\r\n  }\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const sendTransactionWithRetry = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeSend?: () => void,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  if (beforeSend) {\r\n    beforeSend();\r\n  }\r\n\r\n  const { txid, slot } = await sendSignedTransaction({\r\n    connection,\r\n    signedTransaction: transaction,\r\n  });\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<{ txid: string; slot: number }> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  let slot = 0;\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(500);\r\n    }\r\n  })();\r\n  try {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      timeout,\r\n      connection,\r\n      'recent',\r\n      true,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n\r\n    if (confirmation.err) {\r\n      console.error(confirmation.err);\r\n      throw new Error('Transaction failed: Custom instruction error');\r\n    }\r\n\r\n    slot = confirmation?.slot || 0;\r\n  } catch (err: any) {\r\n    console.error('Timeout Error caught', err);\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) {}\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    // throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return { txid, slot };\r\n}\r\n\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n  commitment: Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<SignatureStatus | null | void> {\r\n  let done = false;\r\n  let status: SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    try {\r\n      subId = connection.onSignature(\r\n        txid,\r\n        (result, context) => {\r\n          done = true;\r\n          status = {\r\n            err: result.err,\r\n            slot: context.slot,\r\n            confirmations: 0,\r\n          };\r\n          if (result.err) {\r\n            console.log('Rejected via websocket', result.err);\r\n            reject(status);\r\n          } else {\r\n            console.log('Resolved via websocket', result);\r\n            resolve(status);\r\n          }\r\n        },\r\n        commitment,\r\n      );\r\n    } catch (e) {\r\n      done = true;\r\n      console.error('WS error in setup', txid, e);\r\n    }\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId])\r\n    connection.removeSignatureListener(subId);\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n}\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import { Paper } from '@material-ui/core';\r\nimport Countdown from 'react-countdown';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      padding: theme.spacing(0),\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n        marginRight: 0,\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: '#384457',\r\n        color: 'white',\r\n        borderRadius: 5,\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    done: {\r\n      display: 'flex',\r\n      margin: theme.spacing(1),\r\n      marginRight: 0,\r\n      padding: theme.spacing(1),\r\n      flexDirection: 'column',\r\n      alignContent: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      background: '#384457',\r\n      color: 'white',\r\n      borderRadius: 5,\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    },\r\n    item: {\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface MintCountdownProps {\r\n  date: Date | undefined;\r\n  style?: React.CSSProperties;\r\n  status?: string;\r\n  onComplete?: () => void;\r\n}\r\n\r\ninterface MintCountdownRender {\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n  completed: boolean;\r\n}\r\n\r\nexport const MintCountdown: React.FC<MintCountdownProps> = ({\r\n  date,\r\n  status,\r\n  style,\r\n  onComplete,\r\n}) => {\r\n  const classes = useStyles();\r\n  const renderCountdown = ({\r\n    days,\r\n    hours,\r\n    minutes,\r\n    seconds,\r\n    completed,\r\n  }: MintCountdownRender) => {\r\n    hours += days * 24;\r\n    if (completed) {\r\n      return status ? <span className={classes.done}>{status}</span> : null;\r\n    } else {\r\n      return (\r\n        <div className={classes.root} style={style}>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {hours < 10 ? `0${hours}` : hours}\r\n            </span>\r\n            <span>hrs</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {minutes < 10 ? `0${minutes}` : minutes}\r\n            </span>\r\n            <span>mins</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {seconds < 10 ? `0${seconds}` : seconds}\r\n            </span>\r\n            <span>secs</span>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (date) {\r\n    return (\r\n      <Countdown\r\n        date={date}\r\n        onComplete={onComplete}\r\n        renderer={renderCountdown}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CandyMachineAccount } from './candy-machine';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const CTAButton = styled(Button)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`; // add your own styles here\r\n\r\nexport const MintButton = ({\r\n  onMint,\r\n  candyMachine,\r\n  isMinting,\r\n}: {\r\n  onMint: () => Promise<void>;\r\n  candyMachine?: CandyMachineAccount;\r\n  isMinting: boolean;\r\n}) => {\r\n  const { requestGatewayToken, gatewayStatus } = useGateway();\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\r\n      onMint();\r\n      setClicked(false);\r\n    }\r\n  }, [gatewayStatus, clicked, setClicked, onMint]);\r\n\r\n  return (\r\n    <CTAButton\r\n      disabled={\r\n        candyMachine?.state.isSoldOut ||\r\n        isMinting ||\r\n        !candyMachine?.state.isActive\r\n      }\r\n      onClick={async () => {\r\n        setClicked(true);\r\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\r\n          if (gatewayStatus === GatewayStatus.ACTIVE) {\r\n            setClicked(true);\r\n          } else {\r\n            await requestGatewayToken();\r\n          }\r\n        } else {\r\n          await onMint();\r\n          setClicked(false);\r\n        }\r\n      }}\r\n      variant=\"contained\"\r\n    >\r\n      {candyMachine?.state.isSoldOut ? (\r\n        'SOLD OUT'\r\n      ) : isMinting ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        'MINT'\r\n      )}\r\n    </CTAButton>\r\n  );\r\n};\r\n","import { useEffect, useMemo, useState, useCallback } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\n\r\nimport styled from 'styled-components';\r\nimport { Container, Snackbar, makeStyles, Box,\r\n\tList,\r\n\tListItem,\r\n\tTypography, \r\n  Theme,\r\n  AppBar,\r\n  Toolbar, IconButton, Icon, Link, Drawer, Divider, Grid, Accordion, AccordionSummary, AccordionDetails\r\n} from '@material-ui/core';\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport Twitt from \"@material-ui/icons/Twitter\"\r\nimport You from \"@material-ui/icons/YouTube\"\r\nimport Tel from \"@material-ui/icons/Telegram\"\r\nimport Chevron from \"@material-ui/icons/ChevronLeft\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CandyMachineAccount,\r\n  CANDY_MACHINE_PROGRAM,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n} from './candy-machine';\r\nimport { AlertState, formatNumber, toDate } from './utils';\r\nimport { MintCountdown } from './MintCountdown';\r\nimport { GatewayProvider } from '@civic/solana-gateway-react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { MintButton } from './MintButton';\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport interface HomeProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  startDate: number;\r\n  txTimeout: number;\r\n  rpcHost: string;\r\n}\r\nconst MintContainer = styled.div``\r\n\r\nlet useStyles = makeStyles((theme: Theme) => ({\r\n\tapp: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tlist: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tlistD: {\r\n\t\tdisplay: \"flex\",\r\n\t\tmargin: \"15px auto !important\",\r\n\t\tflexDirection: \"column\",\r\n\t\theight: \"35px\",\r\n\t\twidth: \"100px\",\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\tdrawerHeader: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: theme.spacing(0, 1),\r\n\t\t...theme.mixins.toolbar,\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: \"100%\",\r\n\t\tbackgroundColor: \"rgba(55,55,55, .6)\",\r\n\t\tbackdropFilter: \"blur(2px)\",\r\n\t},\r\n\tfirst: {\r\n    minHeight: \"100vh\",\r\n    backgroundColor: \"#000\",\r\n\t\t/* background:\r\n\t\t\t\"radial-gradient(circle, rgba(2,1,9,1) 0%, rgba(43,22,49,1) 50%, rgba(2,1,9,1) 100%)\", */\r\n\t\tposition: \"relative\",\r\n\t\tborderRadius: \"0 !important\",\r\n\t\tboxShadow: \"none\",\r\n\t\tzIndex: -1,\r\n\t},\r\n\timgFon: {\r\n\t\tposition: \"fixed\",\r\n\t\tbackgroundImage: \" url(./img/newfon.png)\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t\tbackgroundPosition: \"center center\",\r\n\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\tzIndex: -1,\r\n\t},\r\n\thome: {\r\n\t\tbackground:\r\n\t\t\t\"linear-gradient(180deg,#3e2696 30%,#351e8a 0,#351e8a 70%,#472ea5 0)\",\r\n\t\tcolor: \"#FFF\",\r\n\t\theight: \"100vh\",\r\n\t\tborderRadius: \"0 !important\",\r\n\t\tboxShadow: \"none\",\r\n\t\tposition: \"relative\",\r\n\t\t[theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n\t\t\tminHeight: \"100vh\",\r\n\t\t\theight: \"100%\",\r\n\t\t},\r\n\t},\r\n\tbox: {\r\n\t\tbackgroundColor: \"#1D0575\",\r\n\t\tborderRadius: \"25px\",\r\n\t\tposition: \"absolute\",\r\n\t\theight: \"calc(100vh - 200px)\",\r\n\t\ttop: \"50%\",\r\n\t\ttransform: \"translateY(-50%)\",\r\n\t\twidth: \"calc(100% - 32px)\",\r\n\t\t[theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n\t\t\tposition: \"relative\",\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\ttop: \"0\",\r\n\t\t\ttransform: \"none\",\r\n\t\t},\r\n\t},\r\n\tlistTedy: {\r\n\t\theight: \"calc(100vh - 200px)\",\r\n\t\tdisplay: \"flex\",\r\n\t\t[theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\tflexWrap: \"wrap\",\r\n\t\t},\r\n\t},\r\n\timgTedy: {\r\n\t\theight: \"100%\",\r\n\t\tminWidth: \"250px\",\r\n\t\tmaxWidth: \"100%\",\r\n\t\tobjectFit: \"cover\",\r\n\t\tborderRadius: `25px 0 0 25px`,\r\n\t\t[theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n\t\t\tborderRadius: `25px 25px 0 0`,\r\n\t\t\twidth: \"100%\",\r\n\t\t},\r\n\t},\r\n\tlistInfo: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tminWidth: \"300px\",\r\n\t},\r\n\t\"listInfoItem:not(:last-child)\": {\r\n\t\tmarginBottom: \"5px\",\r\n\t\tborderBottom: \"1px solid #6049b0;\",\r\n\t},\r\n\tbuttonWall: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"60px\",\r\n\t\tmarginTop: \"10px\",\r\n\t\tmarginBottom: \"5px\",\r\n\t\tbackground: \"linear-gradient(180deg, #604ae5 0%, #813eee 100%)\",\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"16px\",\r\n\t\tfontWeight: \"bold\",\r\n\t},\r\n\tcontainer: {\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\twidth: \"100%\",\r\n\t\t},\r\n\t\t[theme.breakpoints.up(\"md\")]: {\r\n\t\t\twidth: \"100%\",\r\n\t\t},\r\n\t\t[theme.breakpoints.up(\"lg\")]: {\r\n\t\t\twidth: \"960px\",\r\n\t\t},\r\n\t\t[theme.breakpoints.up(\"xl\")]: {\r\n\t\t\twidth: \"1200px\",\r\n\t\t},\r\n\t},\r\n\tbotText: {\r\n\t\ttextAlign: \"center\",\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: \"50px\",\r\n\t\tleft: \"50%\",\r\n\t\twidth: \"fit-content\",\r\n\t\ttransform: \"translateX(-50%)\",\r\n\t\t[theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n\t\t\tposition: \"relative\",\r\n\t\t\tbottom: \"0\",\r\n\t\t\tleft: \"0\",\r\n\t\t\ttransform: \"none\",\r\n\t\t\tmarginTop: \"20px\",\r\n\t\t},\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"#FFF !important\",\r\n\t\tposition: \"relative\",\r\n\t\tminHeight: \"100vh\",\r\n\t\tpadding: \"50px 0\",\r\n\t\tboxShadow: \"none !important\",\r\n\t\t\"&::before\": {\r\n\t\t\tcontent: '\"\"',\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tbackground: \"#FFF url(/img/mint.svg) !important\",\r\n\t\t\tbackgroundSize: \"cover\",\r\n\t\t\tbackgroundPosition: \"center\",\r\n\t\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\t\ttop: \"2%\",\r\n\t\t\tleft: \"25%\",\r\n\t\t\twidth: \"47%\",\r\n\t\t\theight: \"98%\",\r\n\t\t\t[theme.breakpoints.between(\"xs\", \"sm\")]: {\r\n\t\t\t\ttop: \"10%\",\r\n\t\t\t\tleft: \"12%\",\r\n\t\t\t\twidth: \"80%\",\r\n\t\t\t\theight: \"45%\",\r\n\t\t\t},\r\n\t\t\t[theme.breakpoints.between(\"sm\", \"md\")]: {\r\n\t\t\t\ttop: \"0%\",\r\n\t\t\t\tleft: \"3%\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: \"90%\",\r\n\t\t\t},\r\n\t\t\t[theme.breakpoints.up(\"xl\")]: {\r\n\t\t\t\ttop: \"3%\",\r\n\t\t\t\tleft: \"25%\",\r\n\t\t\t\twidth: \"53%\",\r\n\t\t\t\theight: \"90%\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tpaperFo: {\r\n\t\tbackground: \"#39228B !important\",\r\n\t\tposition: \"relative\",\r\n\t\tminHeight: \"100vh\",\r\n\t\tboxShadow: \"none !important\",\r\n\t},\r\n\tfoot: {\r\n\t\tbackgroundColor: \"#000 !important\",\r\n\t\tborderRadius: \"0 !important\",\r\n\t\tdisplay: \"flex\",\r\n\t\t\"& > div\": {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tflexWrap: \"wrap\",\r\n\t\t},\r\n\t},\r\n\timgMint: {\r\n\t\twidth: \"160px\",\r\n\t\tobjectFit: \"cover\",\r\n\t},\r\n\ttextH3: {\r\n\t\t\"& > div\": {\r\n\t\t\tmarginRight: \"auto\",\r\n\t\t},\r\n\t},\r\n\tfaq1: {\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t},\r\n\tw100: {\r\n\t\twidth: \"100% !important\",\r\n\t},\r\n}))\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const styles = useStyles()\r\n  const [open, setOpen] = useState<boolean>(false)\r\n  const [isUserMinting, setIsUserMinting] = useState(false);\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: '',\r\n    severity: undefined,\r\n  });\r\n\r\n  const rpcUrl = props.rpcHost;\r\n  const wallet = useWallet();\r\n\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  \r\n  const refreshCandyMachineState = useCallback(async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    if (props.candyMachineId) {\r\n      try {\r\n        const cndy = await getCandyMachineState(\r\n          anchorWallet,\r\n          props.candyMachineId,\r\n          props.connection,\r\n        );\r\n        setCandyMachine(cndy);\r\n      } catch (e) {\r\n        console.log('There was a problem fetching Candy Machine state');\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [anchorWallet, props.candyMachineId, props.connection]);\r\n\r\n  const onMint = async () => {\r\n    try {\r\n      setIsUserMinting(true);\r\n      document.getElementById('#identity')?.click();\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        const mintTxId = (\r\n          await mintOneToken(candyMachine, wallet.publicKey)\r\n        )[0];\r\n\r\n        let status: any = { err: true };\r\n        if (mintTxId) {\r\n          status = await awaitTransactionSignatureConfirmation(\r\n            mintTxId,\r\n            props.txTimeout,\r\n            props.connection,\r\n            true,\r\n          );\r\n        }\r\n\r\n        if (status && !status.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Congratulations! Mint succeeded!',\r\n            severity: 'success',\r\n          });\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Mint failed! Please try again!',\r\n            severity: 'error',\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      let message = error.msg || 'Minting failed! Please try again!';\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = 'Transaction Timeout! Please try again.';\r\n        } else if (error.message.indexOf('0x137')) {\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf('0x135')) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: 'error',\r\n      });\r\n    } finally {\r\n      setIsUserMinting(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    refreshCandyMachineState();\r\n  }, [\r\n    anchorWallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n    refreshCandyMachineState\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n          <AppBar className={styles.app} position='static'>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Box sx={{ mr: \"auto\", display: { xs: \"flex\", sm: \"none\" } }}>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize='medium'\r\n\t\t\t\t\t\t\tedge='start'\r\n\t\t\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\t\t\taria-label='menu'\r\n\t\t\t\t\t\t\tonClick={() => setOpen(true)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box sx={{ mr: \"auto\", display: { xs: \"none\", sm: \"flex\" } }}>\r\n\t\t\t\t\t\t<List className={styles.list}>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t\t\t<img src='/img/logo.png' alt='logo' width={100} height={36} />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Link href='#home' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Link href='#second' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\t\tSecond\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Link href='#third' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\t\tThird\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Link href='#fourth' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\t\tFourth\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box sx={{ ml: \"auto\" }}>\r\n\t\t\t\t\t\t<IconButton color='inherit'>\r\n\t\t\t\t\t\t\t<Twitt />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton color='inherit'>\r\n\t\t\t\t\t\t\t<You />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton color='inherit'>\r\n\t\t\t\t\t\t\t<Tel />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton color='inherit'>\r\n\t\t\t\t\t\t\t<Icon className='fab fa-medium' />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton color='inherit'>\r\n\t\t\t\t\t\t\t<Icon className='fab fa-discord' />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tanchor='left'\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={() => setOpen(false)}\r\n\t\t\t\t\tclasses={{ paper: styles.drawerPaper }}>\r\n\t\t\t\t\t<div className={styles.drawerHeader}>\r\n\t\t\t\t\t\t<IconButton onClick={() => setOpen(false)}>\r\n\t\t\t\t\t\t\t<Chevron color='secondary' />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<List className={styles.listD}>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t\t<img src='/img/logo.png' alt='logo' width={100} height={36} />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link href='#home' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link href='#second' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\tSecond\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link href='#third' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\tThird\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link href='#fourth' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\tFourth\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Drawer>\r\n\t\t\t</AppBar>\r\n\t\t\t<Paper id='home' className={styles.first}>\r\n\t\t\t\t<div className={styles.imgFon} />\r\n\t\t\t\t<Container maxWidth={false} style={{ paddingTop: \"18%\" }}>\r\n\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='h4'\r\n\t\t\t\t\t\t\tcomponent='h1'\r\n\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\tstyle={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\tSolano H1\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Fade>\r\n\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='h1'\r\n\t\t\t\t\t\t\tcomponent='h2'\r\n\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\tstyle={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\tSolano H2\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Fade>\r\n\t\t\t\t</Container>\r\n\t\t\t</Paper>\r\n\t\t\t<Paper id='second' className={styles.home}>\r\n\t\t\t\t<Container\r\n\t\t\t\t\tmaxWidth={false}\r\n\t\t\t\t\tclassName={styles.container}\r\n\t\t\t\t\tdisableGutters\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\tpadding: \"30px 16px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<Box className={styles.box}>\r\n\t\t\t\t\t\t<List className={styles.listTedy} disablePadding>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\", padding: \"0\" }}>\r\n\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc='/img/tedy.jpg'\r\n\t\t\t\t\t\t\t\t\t\talt='tedy'\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.imgTedy}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem style={{ justifyContent: \"center\" }}>\r\n\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t{!wallet.connected ? (\r\n\t\t\t\t\t\t\t\t\t\t<List className={styles.listInfo}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"listInfoItem:not(:last-child)\"]}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ConnectButton>Connect Wallet</ConnectButton>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"listInfoItem:not(:last-child)\"]}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent='div'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex\", width: \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPrice:{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ marginLeft: \"auto\" }}>1 SOL</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"listInfoItem:not(:last-child)\"]}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent='div'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex\", width: \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tRemaining:{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ marginLeft: \"auto\" }}>1 SOL</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tcandyMachine && (\r\n\t\t\t\t\t\t\t\t\t\t\t<List className={styles.listInfo}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"listInfoItem:not(:last-child)\"]}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MintCountdown\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={toDate(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcandyMachine?.state.goLiveDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? candyMachine?.state.goLiveDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: candyMachine?.state.isPresale\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? new anchor.BN(new Date().getTime() / 1000)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ justifyContent: \"flex-end\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!candyMachine?.state?.isActive ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcandyMachine?.state?.isSoldOut\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"COMPLETED\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: candyMachine?.state.isPresale\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"PRESALE\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"LIVE\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"listInfoItem:not(:last-child)\"]}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent='div'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex\", width: \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice:{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ marginLeft: \"auto\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t◎{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{formatNumber.asNumber(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcandyMachine?.state.price!,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"listInfoItem:not(:last-child)\"]}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent='div'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex\", width: \"100%\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tRemaining:{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>{`${candyMachine?.state.itemsRemaining}`}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"listInfoItem:not(:last-child)\"]}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MintContainer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{candyMachine?.state.isActive &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcandyMachine?.state.gatekeeper &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twallet.publicKey &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twallet.signTransaction ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GatewayProvider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twallet={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublicKey:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twallet.publicKey ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew PublicKey(CANDY_MACHINE_PROGRAM),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//@ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsignTransaction: wallet.signTransaction,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgatekeeperNetwork={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcandyMachine?.state?.gatekeeper\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t?.gatekeeperNetwork\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclusterUrl={rpcUrl}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={{ autoShowModal: false }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MintButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcandyMachine={candyMachine}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisMinting={isUserMinting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMint={onMint}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</GatewayProvider>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MintButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcandyMachine={candyMachine}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisMinting={isUserMinting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMint={onMint}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MintContainer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\tcomponent='h2'\r\n\t\t\t\t\t\tclassName={styles.botText}\r\n\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\tPlease make sure you connect your SOL wallet to Mint.\r\n\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Container>\r\n\t\t\t</Paper>\r\n\t\t\t<Paper id='third' className={styles.paper}>\r\n\t\t\t\t<Container maxWidth={false}>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant='h1'\r\n\t\t\t\t\t\tcomponent='h2'\r\n\t\t\t\t\t\tstyle={{ color: \"#472ea5\", textAlign: \"center\", fontWeight: 700 }}>\r\n\t\t\t\t\t\t<Fade bottom>How to mint</Fade>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} style={{ zIndex: 0, marginTop: \"15px\" }}>\r\n\t\t\t\t\t\t\t\t<Grid container justifyContent='center' spacing={6}>\r\n\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tsrc='/img/tedy.jpg'\r\n\t\t\t\t\t\t\t\t\t\t\talt='tedy'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.imgMint}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tsrc='/img/tedy.jpg'\r\n\t\t\t\t\t\t\t\t\t\t\talt='tedy'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.imgMint}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tsrc='/img/tedy.jpg'\r\n\t\t\t\t\t\t\t\t\t\t\talt='tedy'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.imgMint}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Fade>\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tminWidth: \"350px\",\r\n\t\t\t\t\t\t\tmaxWidth: \"625px\",\r\n\t\t\t\t\t\t\tjustifyContent: \"left\",\r\n\t\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t\t\tmargin: \"0 auto\",\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tstyle={{ flexDirection: \"column\" }}\r\n\t\t\t\t\t\t\tclassName={styles.textH3}>\r\n\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\tcomponent='h3'\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#472ea5\" }}>\r\n\t\t\t\t\t\t\t\t\t1. Buy sol from an exchange\r\n\t\t\t\t\t\t\t\t</Typography>{\" \"}\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#472ea5\" }}>\r\n\t\t\t\t\t\t\t\t\tBuy SOL from your favorite crypto exchange. If you plan on\r\n\t\t\t\t\t\t\t\t\tconverting another crypto into SOL, the easiest way is still\r\n\t\t\t\t\t\t\t\t\tusing an exchange. Here are a few suggestions: Coinbase,\r\n\t\t\t\t\t\t\t\t\tKraken, FTX, Binance, Huobi, Bitfinex\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tstyle={{ flexDirection: \"column\" }}\r\n\t\t\t\t\t\t\tclassName={styles.textH3}>\r\n\t\t\t\t\t\t\t<Fade bottom style={{ marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\tcomponent='h3'\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#472ea5\" }}>\r\n\t\t\t\t\t\t\t\t\t2. Transfer from exchange to wallet\r\n\t\t\t\t\t\t\t\t</Typography>{\" \"}\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#472ea5\" }}>\r\n\t\t\t\t\t\t\t\t\tTransfer funds from your exchange to your wallet. Always\r\n\t\t\t\t\t\t\t\t\ttransfer a bit more than what you plan on spending to pay for\r\n\t\t\t\t\t\t\t\t\tgas. Solana is practically free but there is still a small gas\r\n\t\t\t\t\t\t\t\t\tfee.\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tstyle={{ flexDirection: \"column\" }}\r\n\t\t\t\t\t\t\tclassName={styles.textH3}>\r\n\t\t\t\t\t\t\t<Fade bottom style={{ marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\tcomponent='h3'\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#472ea5\" }}>\r\n\t\t\t\t\t\t\t\t\t3. Download and install a sol wallet\r\n\t\t\t\t\t\t\t\t</Typography>{\" \"}\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#472ea5\" }}>\r\n\t\t\t\t\t\t\t\t\tFor Desktop/Laptop, use Phantom on your browser.\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tstyle={{ flexDirection: \"column\" }}\r\n\t\t\t\t\t\t\tclassName={styles.textH3}>\r\n\t\t\t\t\t\t\t<Fade bottom style={{ marginRight: \"auto\" }}>\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\tcomponent='h3'\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#472ea5\" }}>\r\n\t\t\t\t\t\t\t\t\t4. Mint your NFT\r\n\t\t\t\t\t\t\t\t</Typography>{\" \"}\r\n\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\tvariant='body2'\r\n\t\t\t\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#472ea5\" }}>\r\n\t\t\t\t\t\t\t\t\tOn January 16th, 2022, 5PM EST come to our website and mint\r\n\t\t\t\t\t\t\t\t\tyour own Sol Unicorn. There will be a MINT button clearly\r\n\t\t\t\t\t\t\t\t\tvisible on the home page — you won’t miss it.\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Container>\r\n\t\t\t</Paper>\r\n\t\t\t<Paper id='fourth' className={styles.paperFo}>\r\n\t\t\t\t<Container maxWidth={\"sm\"}>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant='h1'\r\n\t\t\t\t\t\tcomponent='h2'\r\n\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\tstyle={{ fontWeight: 700, textAlign: \"center\", padding: \"50px 0\" }}>\r\n\t\t\t\t\t\t<Fade bottom>FAQ</Fade>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t01\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tWhat is Sol Unicorns 3D?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t\tSol Unicorns 3D is a collection of 7,777 unique NFT\r\n\t\t\t\t\t\t\t\t\t\t\tunicorns, each having a set of randomly generated traits\r\n\t\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t02\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tWhy did you choose Solana?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tBlazing speed, barely noticeable gas fees, and an\r\n\t\t\t\t\t\t\t\t\t\tever-growing community worldwide!\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t03\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tWhat wallet can I connect to mint a Sol Unicorns 3D?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tYou can connect Phantom, Slope, Solflare, Sollet. Our choice\r\n\t\t\t\t\t\t\t\t\t\tis the Phantom wallet\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t04\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tHow to connect my wallet?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tClick on the Connect wallet button if you already have a\r\n\t\t\t\t\t\t\t\t\t\twallet. if not — go to phantom.app and create your wallet\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t05\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tHow to mint?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tConnect your wallet on our website once minting is on. Then\r\n\t\t\t\t\t\t\t\t\t\tclick the Mint button\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t06\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tWhat`s the mint date?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tPre-sale mint for WL applicants starts on January 9th. The\r\n\t\t\t\t\t\t\t\t\t\tpublic mint for everyone else will be held on January 16th\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t07\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tWhat’s the mint price?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tPre-sale mint cost 0.7 Sol, while the public mint cost 1.5\r\n\t\t\t\t\t\t\t\t\t\tSol\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t08\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tHow can I get WL?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tJoin our discord server to participate in giveaways,\r\n\t\t\t\t\t\t\t\t\t\traffles, and events to get whitelisted\r\n\t\t\t\t\t\t\t\t\t\tdiscord.gg/solunicorns\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t09\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tHow should I know how rare is my Unicorn?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tStay tuned for updates in our official Discord group\r\n\t\t\t\t\t\t\t\t\t\tdiscord.gg/solunicorns\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t10\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tWhat should I do after minting my Sol Unicorn?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tTo get maximum benefits, you may want to hold it for extra\r\n\t\t\t\t\t\t\t\t\t\trewards and in-game perks.\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 3px 0px 0px rgb(255, 255, 255, 14%)\",\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"0 !important\",\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon color='secondary' />}\r\n\t\t\t\t\t\t\t\t\taria-controls='panel1a-content'\r\n\t\t\t\t\t\t\t\t\tid='panel1a-header'\r\n\t\t\t\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant='h5' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#e58c18\", marginRight: '16px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t11\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\tWhy should I hold Sol Unicorns 3D?\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t\t<Typography variant='body1' component='p' color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\tHolding rewards you perks such as P2E game, NFT & Token\r\n\t\t\t\t\t\t\t\t\t\tdrops, priority access for future NFT collections, and more.\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Container>\r\n\t\t\t</Paper>\r\n\t\t\t<footer>\r\n\t\t\t\t<Paper className={styles.foot}>\r\n\t\t\t\t\t<Container maxWidth={false}>\r\n\t\t\t\t\t\t<List className={styles.list} style={{ flexGrow: 0 }}>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Link href='#home' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Link href='#second' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\t\tSecond\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Link href='#third' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\t\tThird\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t<Link href='#fourth' style={{ color: \"#FFF\" }}>\r\n\t\t\t\t\t\t\t\t\tFourth\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t<Box sx={{ ml: \"auto\", mt: 1 }}>\r\n\t\t\t\t\t\t\t<IconButton color='secondary'>\r\n\t\t\t\t\t\t\t\t<Twitt />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<IconButton color='secondary'>\r\n\t\t\t\t\t\t\t\t<You />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<IconButton color='secondary'>\r\n\t\t\t\t\t\t\t\t<Tel />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<IconButton color='secondary'>\r\n\t\t\t\t\t\t\t\t<Icon className='fab fa-medium' />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<IconButton color='secondary'>\r\n\t\t\t\t\t\t\t\t<Icon className='fab fa-discord' />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Paper>\r\n\t\t\t</footer>\r\n      <Snackbar\r\n        open={alertState.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setAlertState({ ...alertState, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n          severity={alertState.severity}\r\n        >\r\n          {alertState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import './App.css';\r\nimport { useMemo } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\nimport Home from './Home';\r\n\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\n\r\nimport { ThemeProvider, createTheme } from '@material-ui/core';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#000'\r\n    },\r\n    secondary: {\r\n\t\t\tmain: \"#FFF\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tpaper: \"rgba(55,55,55, .6)\",\r\n\t\t},\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Brutal Type\", sans-serif',\r\n\t\th1: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th2: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th3: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th4: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th5: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th6: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\tbody1: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\tbody2: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\tcaption: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\tsubtitle1: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\tsubtitle2: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t},\r\n\tbreakpoints: {\r\n\t\tvalues: {\r\n\t\t\txs: 0,\r\n\t\t\tsm: 600,\r\n\t\t\tmd: 900,\r\n\t\t\tlg: 1200,\r\n\t\t\txl: 1920,\r\n\t\t},\r\n  },\r\n  shape: {\r\n    borderRadius: 0\r\n  },\r\n});\r\n\r\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\r\n  try {\r\n    const candyMachineId = new anchor.web3.PublicKey(\r\n      process.env.REACT_APP_CANDY_MACHINE_ID!,\r\n    );\r\n\r\n    return candyMachineId;\r\n  } catch (e) {\r\n    console.log('Failed to construct CandyMachineId', e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst candyMachineId = getCandyMachineId();\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost\r\n  ? rpcHost\r\n  : anchor.web3.clusterApiUrl('devnet'));\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\nconst txTimeoutInMilliseconds = 30000;\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSlopeWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <Home\r\n              candyMachineId={candyMachineId}\r\n              connection={connection}\r\n              startDate={startDateSeed}\r\n              txTimeout={txTimeoutInMilliseconds}\r\n              rpcHost={rpcHost}\r\n            />\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import * as anchor from '@project-serum/anchor';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport {\r\n  LAMPORTS_PER_SOL,\r\n  SYSVAR_RENT_PUBKEY,\r\n  TransactionInstruction,\r\n} from '@solana/web3.js';\r\n\r\nexport interface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\r\n}\r\n\r\nexport const toDate = (value?: anchor.BN) => {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  return new Date(value.toNumber() * 1000);\r\n};\r\n\r\nconst numberFormater = new Intl.NumberFormat('en-US', {\r\n  style: 'decimal',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport const formatNumber = {\r\n  format: (val?: number) => {\r\n    if (!val) {\r\n      return '--';\r\n    }\r\n\r\n    return numberFormater.format(val);\r\n  },\r\n  asNumber: (val?: anchor.BN) => {\r\n    if (!val) {\r\n      return undefined;\r\n    }\r\n\r\n    return val.toNumber() / LAMPORTS_PER_SOL;\r\n  },\r\n};\r\n\r\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\r\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\r\n\r\nexport const CIVIC = new anchor.web3.PublicKey(\r\n  'gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs',\r\n);\r\n\r\nexport const getAtaForMint = async (\r\n  mint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\r\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getNetworkExpire = async (\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [gatekeeperNetwork.toBuffer(), Buffer.from('expire')],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport const getNetworkToken = async (\r\n  wallet: anchor.web3.PublicKey,\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [\r\n      wallet.toBuffer(),\r\n      Buffer.from('gateway'),\r\n      Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]),\r\n      gatekeeperNetwork.toBuffer(),\r\n    ],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport function createAssociatedTokenAccountInstruction(\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) {\r\n  const keys = [\r\n    {\r\n      pubkey: payer,\r\n      isSigner: true,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: associatedTokenAddress,\r\n      isSigner: false,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: walletAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: splTokenMintAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n}\r\n"],"sourceRoot":""}