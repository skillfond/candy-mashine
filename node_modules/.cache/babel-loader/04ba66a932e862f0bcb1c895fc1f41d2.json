{"ast":null,"code":"/* eslint-disable no-console */\n\n/* eslint-disable global-require */\nexport { GatewayStatus } from './types';\nexport { IdentityButton, getTokenDescription, ButtonMode } from './button'; // These will be moved into the Solana Project once we add another chain implementation\n\nexport { default as Badge } from './solana/badge';\nexport { SolanaGatewayProvider as GatewayProvider, useSolanaGateway as useGateway } from './solana';\n\ntry {\n  const packageJson = require('../../package.json');\n\n  if (packageJson) console.log(`${packageJson.name} version ${packageJson.version}`);\n} catch (error) {\n  console.error('Error retrieving version from ../../package.json');\n}","map":{"version":3,"sources":["C:/Test Mint/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/index.js"],"names":["GatewayStatus","IdentityButton","getTokenDescription","ButtonMode","default","Badge","SolanaGatewayProvider","GatewayProvider","useSolanaGateway","useGateway","packageJson","require","console","log","name","version","error"],"mappings":"AAAA;;AACA;AACA,SAASA,aAAT,QAA8B,SAA9B;AACA,SAASC,cAAT,EAAyBC,mBAAzB,EAA8CC,UAA9C,QAAgE,UAAhE,C,CACA;;AACA,SAASC,OAAO,IAAIC,KAApB,QAAiC,gBAAjC;AACA,SAASC,qBAAqB,IAAIC,eAAlC,EAAmDC,gBAAgB,IAAIC,UAAvE,QAAyF,UAAzF;;AACA,IAAI;AACA,QAAMC,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAID,WAAJ,EACIE,OAAO,CAACC,GAAR,CAAa,GAAEH,WAAW,CAACI,IAAK,YAAWJ,WAAW,CAACK,OAAQ,EAA/D;AACP,CAJD,CAKA,OAAOC,KAAP,EAAc;AACVJ,EAAAA,OAAO,CAACI,KAAR,CAAc,kDAAd;AACH","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable global-require */\nexport { GatewayStatus } from './types';\nexport { IdentityButton, getTokenDescription, ButtonMode } from './button';\n// These will be moved into the Solana Project once we add another chain implementation\nexport { default as Badge } from './solana/badge';\nexport { SolanaGatewayProvider as GatewayProvider, useSolanaGateway as useGateway } from './solana';\ntry {\n    const packageJson = require('../../package.json');\n    if (packageJson)\n        console.log(`${packageJson.name} version ${packageJson.version}`);\n}\ncatch (error) {\n    console.error('Error retrieving version from ../../package.json');\n}\n"]},"metadata":{},"sourceType":"module"}