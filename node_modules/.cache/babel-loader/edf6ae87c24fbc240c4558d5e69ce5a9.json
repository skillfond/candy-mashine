{"ast":null,"code":"import _classCallCheck from \"F:\\\\SitePortfolio\\\\skillfond\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"F:\\\\SitePortfolio\\\\skillfond\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _inherits from \"F:\\\\SitePortfolio\\\\skillfond\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"F:\\\\SitePortfolio\\\\skillfond\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\n\n/* eslint-disable no-console */\n\n/* eslint-disable class-methods-use-this */\nimport { DEFAULT_LOG_LEVEL, LoggingProvider } from './provider.logger';\n\nvar consoleWithOptionalObject = function consoleWithOptionalObject(method, message, object) {\n  if (object) {\n    method(message, object);\n  } else {\n    method(message);\n  }\n};\n\nvar LogLocal = /*#__PURE__*/function (_LoggingProvider) {\n  _inherits(LogLocal, _LoggingProvider);\n\n  var _super = _createSuper(LogLocal);\n\n  function LogLocal() {\n    var logLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_LOG_LEVEL;\n\n    _classCallCheck(this, LogLocal);\n\n    return _super.call(this, console, logLevel);\n  }\n\n  _createClass(LogLocal, [{\n    key: \"debug\",\n    value: function debug(message, object) {\n      consoleWithOptionalObject(this.logger.debug, message, object);\n    }\n  }, {\n    key: \"info\",\n    value: function info(message, object) {\n      consoleWithOptionalObject(this.logger.info, message, object);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message, object) {\n      consoleWithOptionalObject(this.logger.warn, message, object);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message, exception) {\n      consoleWithOptionalObject(this.logger.error, message, exception);\n    }\n  }]);\n\n  return LogLocal;\n}(LoggingProvider);\n\nexport default LogLocal;","map":{"version":3,"sources":["F:/SitePortfolio/skillfond/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/logger/local.logger.js"],"names":["DEFAULT_LOG_LEVEL","LoggingProvider","consoleWithOptionalObject","method","message","object","LogLocal","logLevel","console","logger","debug","info","warn","exception","error"],"mappings":";;;;;AAAA;;AACA;AACA,SAASA,iBAAT,EAA4BC,eAA5B,QAAmD,mBAAnD;;AACA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,MAAD,EAASC,OAAT,EAAkBC,MAAlB,EAA6B;AAC3D,MAAIA,MAAJ,EAAY;AACRF,IAAAA,MAAM,CAACC,OAAD,EAAUC,MAAV,CAAN;AACH,GAFD,MAGK;AACDF,IAAAA,MAAM,CAACC,OAAD,CAAN;AACH;AACJ,CAPD;;IAQME,Q;;;;;AACF,sBAA0C;AAAA,QAA9BC,QAA8B,uEAAnBP,iBAAmB;;AAAA;;AAAA,6BAChCQ,OADgC,EACvBD,QADuB;AAEzC;;;;WACD,eAAMH,OAAN,EAAeC,MAAf,EAAuB;AACnBH,MAAAA,yBAAyB,CAAC,KAAKO,MAAL,CAAYC,KAAb,EAAoBN,OAApB,EAA6BC,MAA7B,CAAzB;AACH;;;WACD,cAAKD,OAAL,EAAcC,MAAd,EAAsB;AAClBH,MAAAA,yBAAyB,CAAC,KAAKO,MAAL,CAAYE,IAAb,EAAmBP,OAAnB,EAA4BC,MAA5B,CAAzB;AACH;;;WACD,cAAKD,OAAL,EAAcC,MAAd,EAAsB;AAClBH,MAAAA,yBAAyB,CAAC,KAAKO,MAAL,CAAYG,IAAb,EAAmBR,OAAnB,EAA4BC,MAA5B,CAAzB;AACH;;;WACD,eAAMD,OAAN,EAAeS,SAAf,EAA0B;AACtBX,MAAAA,yBAAyB,CAAC,KAAKO,MAAL,CAAYK,KAAb,EAAoBV,OAApB,EAA6BS,SAA7B,CAAzB;AACH;;;;EAfkBZ,e;;AAiBvB,eAAeK,QAAf","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable class-methods-use-this */\nimport { DEFAULT_LOG_LEVEL, LoggingProvider } from './provider.logger';\nconst consoleWithOptionalObject = (method, message, object) => {\n    if (object) {\n        method(message, object);\n    }\n    else {\n        method(message);\n    }\n};\nclass LogLocal extends LoggingProvider {\n    constructor(logLevel = DEFAULT_LOG_LEVEL) {\n        super(console, logLevel);\n    }\n    debug(message, object) {\n        consoleWithOptionalObject(this.logger.debug, message, object);\n    }\n    info(message, object) {\n        consoleWithOptionalObject(this.logger.info, message, object);\n    }\n    warn(message, object) {\n        consoleWithOptionalObject(this.logger.warn, message, object);\n    }\n    error(message, exception) {\n        consoleWithOptionalObject(this.logger.error, message, exception);\n    }\n}\nexport default LogLocal;\n"]},"metadata":{},"sourceType":"module"}