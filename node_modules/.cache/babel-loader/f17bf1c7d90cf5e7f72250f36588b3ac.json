{"ast":null,"code":"/* eslint-disable no-console */\n\n/* eslint-disable class-methods-use-this */\nimport { DEFAULT_LOG_LEVEL, LoggingProvider } from './provider.logger';\n\nconst consoleWithOptionalObject = (method, message, object) => {\n  if (object) {\n    method(message, object);\n  } else {\n    method(message);\n  }\n};\n\nclass LogLocal extends LoggingProvider {\n  constructor() {\n    let logLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_LOG_LEVEL;\n    super(console, logLevel);\n  }\n\n  debug(message, object) {\n    consoleWithOptionalObject(this.logger.debug, message, object);\n  }\n\n  info(message, object) {\n    consoleWithOptionalObject(this.logger.info, message, object);\n  }\n\n  warn(message, object) {\n    consoleWithOptionalObject(this.logger.warn, message, object);\n  }\n\n  error(message, exception) {\n    consoleWithOptionalObject(this.logger.error, message, exception);\n  }\n\n}\n\nexport default LogLocal;","map":{"version":3,"sources":["F:/SitePortfolio/skillfond/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/logger/local.logger.js"],"names":["DEFAULT_LOG_LEVEL","LoggingProvider","consoleWithOptionalObject","method","message","object","LogLocal","constructor","logLevel","console","debug","logger","info","warn","error","exception"],"mappings":"AAAA;;AACA;AACA,SAASA,iBAAT,EAA4BC,eAA5B,QAAmD,mBAAnD;;AACA,MAAMC,yBAAyB,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,MAAlB,KAA6B;AAC3D,MAAIA,MAAJ,EAAY;AACRF,IAAAA,MAAM,CAACC,OAAD,EAAUC,MAAV,CAAN;AACH,GAFD,MAGK;AACDF,IAAAA,MAAM,CAACC,OAAD,CAAN;AACH;AACJ,CAPD;;AAQA,MAAME,QAAN,SAAuBL,eAAvB,CAAuC;AACnCM,EAAAA,WAAW,GAA+B;AAAA,QAA9BC,QAA8B,uEAAnBR,iBAAmB;AACtC,UAAMS,OAAN,EAAeD,QAAf;AACH;;AACDE,EAAAA,KAAK,CAACN,OAAD,EAAUC,MAAV,EAAkB;AACnBH,IAAAA,yBAAyB,CAAC,KAAKS,MAAL,CAAYD,KAAb,EAAoBN,OAApB,EAA6BC,MAA7B,CAAzB;AACH;;AACDO,EAAAA,IAAI,CAACR,OAAD,EAAUC,MAAV,EAAkB;AAClBH,IAAAA,yBAAyB,CAAC,KAAKS,MAAL,CAAYC,IAAb,EAAmBR,OAAnB,EAA4BC,MAA5B,CAAzB;AACH;;AACDQ,EAAAA,IAAI,CAACT,OAAD,EAAUC,MAAV,EAAkB;AAClBH,IAAAA,yBAAyB,CAAC,KAAKS,MAAL,CAAYE,IAAb,EAAmBT,OAAnB,EAA4BC,MAA5B,CAAzB;AACH;;AACDS,EAAAA,KAAK,CAACV,OAAD,EAAUW,SAAV,EAAqB;AACtBb,IAAAA,yBAAyB,CAAC,KAAKS,MAAL,CAAYG,KAAb,EAAoBV,OAApB,EAA6BW,SAA7B,CAAzB;AACH;;AAfkC;;AAiBvC,eAAeT,QAAf","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable class-methods-use-this */\nimport { DEFAULT_LOG_LEVEL, LoggingProvider } from './provider.logger';\nconst consoleWithOptionalObject = (method, message, object) => {\n    if (object) {\n        method(message, object);\n    }\n    else {\n        method(message);\n    }\n};\nclass LogLocal extends LoggingProvider {\n    constructor(logLevel = DEFAULT_LOG_LEVEL) {\n        super(console, logLevel);\n    }\n    debug(message, object) {\n        consoleWithOptionalObject(this.logger.debug, message, object);\n    }\n    info(message, object) {\n        consoleWithOptionalObject(this.logger.info, message, object);\n    }\n    warn(message, object) {\n        consoleWithOptionalObject(this.logger.warn, message, object);\n    }\n    error(message, exception) {\n        consoleWithOptionalObject(this.logger.error, message, exception);\n    }\n}\nexport default LogLocal;\n"]},"metadata":{},"sourceType":"module"}