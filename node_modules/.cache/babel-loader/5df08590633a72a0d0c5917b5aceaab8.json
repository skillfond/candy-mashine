{"ast":null,"code":"import { useCallback } from 'react';\nimport logger from '../logger';\n\nconst useUserInteraction = (_ref, state, dispatch) => {\n  let {\n    wallet\n  } = _ref;\n  const {\n    refreshIntervalId\n  } = state;\n  /**\n   * handle the user initiating an issuance request\n   */\n\n  const requestGatewayToken = useCallback(async () => {\n    logger.debug('requestGatewayToken called');\n\n    if (!wallet || !wallet.publicKey) {\n      logger.error('No wallet connected');\n      return;\n    } // We should stop polling when showing a modal dialog\n    // and restart the polling when the user taps ok\n    // or cancel\n\n\n    if (refreshIntervalId) {\n      dispatch({\n        type: 'refresh_clear_interval'\n      });\n      clearInterval(refreshIntervalId);\n    }\n\n    dispatch({\n      type: 'userInteraction_check_gatewayToken_status',\n      token: state.gatewayToken\n    });\n  }, [refreshIntervalId, state.gatewayToken]);\n  return {\n    requestGatewayToken\n  };\n};\n\nexport default useUserInteraction;","map":{"version":3,"sources":["F:/SitePortfolio/skillfond/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/useHooks/useUserInteraction.js"],"names":["useCallback","logger","useUserInteraction","state","dispatch","wallet","refreshIntervalId","requestGatewayToken","debug","publicKey","error","type","clearInterval","token","gatewayToken"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AACA,MAAMC,kBAAkB,GAAG,OAAaC,KAAb,EAAoBC,QAApB,KAAiC;AAAA,MAAhC;AAAEC,IAAAA;AAAF,GAAgC;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAwBH,KAA9B;AACA;AACJ;AACA;;AACI,QAAMI,mBAAmB,GAAGP,WAAW,CAAC,YAAY;AAChDC,IAAAA,MAAM,CAACO,KAAP,CAAa,4BAAb;;AACA,QAAI,CAACH,MAAD,IAAW,CAACA,MAAM,CAACI,SAAvB,EAAkC;AAC9BR,MAAAA,MAAM,CAACS,KAAP,CAAa,qBAAb;AACA;AACH,KAL+C,CAMhD;AACA;AACA;;;AACA,QAAIJ,iBAAJ,EAAuB;AACnBF,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAC,MAAAA,aAAa,CAACN,iBAAD,CAAb;AACH;;AACDF,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,2CAAR;AAAqDE,MAAAA,KAAK,EAAEV,KAAK,CAACW;AAAlE,KAAD,CAAR;AACH,GAdsC,EAcpC,CAACR,iBAAD,EAAoBH,KAAK,CAACW,YAA1B,CAdoC,CAAvC;AAeA,SAAO;AACHP,IAAAA;AADG,GAAP;AAGH,CAvBD;;AAwBA,eAAeL,kBAAf","sourcesContent":["import { useCallback } from 'react';\nimport logger from '../logger';\nconst useUserInteraction = ({ wallet }, state, dispatch) => {\n    const { refreshIntervalId } = state;\n    /**\n     * handle the user initiating an issuance request\n     */\n    const requestGatewayToken = useCallback(async () => {\n        logger.debug('requestGatewayToken called');\n        if (!wallet || !wallet.publicKey) {\n            logger.error('No wallet connected');\n            return;\n        }\n        // We should stop polling when showing a modal dialog\n        // and restart the polling when the user taps ok\n        // or cancel\n        if (refreshIntervalId) {\n            dispatch({ type: 'refresh_clear_interval' });\n            clearInterval(refreshIntervalId);\n        }\n        dispatch({ type: 'userInteraction_check_gatewayToken_status', token: state.gatewayToken });\n    }, [refreshIntervalId, state.gatewayToken]);\n    return {\n        requestGatewayToken,\n    };\n};\nexport default useUserInteraction;\n"]},"metadata":{},"sourceType":"module"}