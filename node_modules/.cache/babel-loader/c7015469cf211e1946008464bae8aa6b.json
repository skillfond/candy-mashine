{"ast":null,"code":"import _objectSpread from\"C:\\\\Test Mint\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"C:\\\\Test Mint\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Test Mint\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _taggedTemplateLiteral from\"C:\\\\Test Mint\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import _regeneratorRuntime from\"C:\\\\Test Mint\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useEffect,useMemo,useState,useCallback}from'react';import styled from'styled-components';import{Container,Snackbar}from'@material-ui/core';import Paper from'@material-ui/core/Paper';import Alert from'@material-ui/lab/Alert';import{PublicKey}from'@solana/web3.js';import{useWallet}from'@solana/wallet-adapter-react';import{WalletDialogButton}from'@solana/wallet-adapter-material-ui';import{awaitTransactionSignatureConfirmation,CANDY_MACHINE_PROGRAM,getCandyMachineState,mintOneToken}from'./candy-machine';import{Header}from'./Header';import{MintButton}from'./MintButton';import{GatewayProvider}from'@civic/solana-gateway-react';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConnectButton=styled(WalletDialogButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 10px;\\n  margin-bottom: 5px;\\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));var MintContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\"])));// add your owns styles here\nvar Home=function Home(props){var _candyMachine$state,_candyMachine$state$g;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUserMinting=_useState2[0],setIsUserMinting=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),candyMachine=_useState4[0],setCandyMachine=_useState4[1];var _useState5=useState({open:false,message:'',severity:undefined}),_useState6=_slicedToArray(_useState5,2),alertState=_useState6[0],setAlertState=_useState6[1];var rpcUrl=props.rpcHost;var wallet=useWallet();var anchorWallet=useMemo(function(){if(!wallet||!wallet.publicKey||!wallet.signAllTransactions||!wallet.signTransaction){return;}return{publicKey:wallet.publicKey,signAllTransactions:wallet.signAllTransactions,signTransaction:wallet.signTransaction};},[wallet]);var refreshCandyMachineState=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var cndy;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(anchorWallet){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(!props.candyMachineId){_context.next=14;break;}_context.prev=3;_context.next=6;return getCandyMachineState(anchorWallet,props.candyMachineId,props.connection);case 6:cndy=_context.sent;setCandyMachine(cndy);_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);console.log('There was a problem fetching Candy Machine state');console.log(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[3,10]]);})),[anchorWallet,props.candyMachineId,props.connection]);var onMint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _document$getElementB,mintTxId,status,message;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setIsUserMinting(true);(_document$getElementB=document.getElementById('#identity'))===null||_document$getElementB===void 0?void 0:_document$getElementB.click();if(!(wallet.connected&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.program&&wallet.publicKey)){_context2.next=13;break;}_context2.next=6;return mintOneToken(candyMachine,wallet.publicKey);case 6:mintTxId=_context2.sent[0];status={err:true};if(!mintTxId){_context2.next=12;break;}_context2.next=11;return awaitTransactionSignatureConfirmation(mintTxId,props.txTimeout,props.connection,true);case 11:status=_context2.sent;case 12:if(status&&!status.err){setAlertState({open:true,message:'Congratulations! Mint succeeded!',severity:'success'});}else{setAlertState({open:true,message:'Mint failed! Please try again!',severity:'error'});}case 13:_context2.next=20;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](0);message=_context2.t0.msg||'Minting failed! Please try again!';if(!_context2.t0.msg){if(!_context2.t0.message){message='Transaction Timeout! Please try again.';}else if(_context2.t0.message.indexOf('0x137')){message=\"SOLD OUT!\";}else if(_context2.t0.message.indexOf('0x135')){message=\"Insufficient funds to mint. Please fund your wallet.\";}}else{if(_context2.t0.code===311){message=\"SOLD OUT!\";window.location.reload();}else if(_context2.t0.code===312){message=\"Minting period hasn't started yet.\";}}setAlertState({open:true,message:message,severity:'error'});case 20:_context2.prev=20;setIsUserMinting(false);return _context2.finish(20);case 23:case\"end\":return _context2.stop();}}},_callee2,null,[[0,15,20,23]]);}));return function onMint(){return _ref2.apply(this,arguments);};}();useEffect(function(){refreshCandyMachineState();},[anchorWallet,props.candyMachineId,props.connection,refreshCandyMachineState]);return/*#__PURE__*/_jsxs(Container,{style:{marginTop:100},children:[/*#__PURE__*/_jsx(Container,{maxWidth:\"xs\",style:{position:'relative'},children:/*#__PURE__*/_jsx(Paper,{style:{padding:24,backgroundColor:'#151A1F',borderRadius:6},children:!wallet.connected?/*#__PURE__*/_jsx(ConnectButton,{children:\"Connect Wallet\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{candyMachine:candyMachine}),/*#__PURE__*/_jsx(MintContainer,{children:candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper&&wallet.publicKey&&wallet.signTransaction?/*#__PURE__*/_jsx(GatewayProvider,{wallet:{publicKey:wallet.publicKey||new PublicKey(CANDY_MACHINE_PROGRAM),//@ts-ignore\nsignTransaction:wallet.signTransaction},gatekeeperNetwork:candyMachine===null||candyMachine===void 0?void 0:(_candyMachine$state=candyMachine.state)===null||_candyMachine$state===void 0?void 0:(_candyMachine$state$g=_candyMachine$state.gatekeeper)===null||_candyMachine$state$g===void 0?void 0:_candyMachine$state$g.gatekeeperNetwork,clusterUrl:rpcUrl,options:{autoShowModal:false},children:/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,onMint:onMint})}):/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,onMint:onMint})})]})})}),/*#__PURE__*/_jsx(Snackbar,{open:alertState.open,autoHideDuration:6000,onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},children:/*#__PURE__*/_jsx(Alert,{onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},severity:alertState.severity,children:alertState.message})})]});};export default Home;","map":{"version":3,"sources":["C:/Test Mint/metaplex/js/packages/candy-machine-ui/src/Home.tsx"],"names":["useEffect","useMemo","useState","useCallback","styled","Container","Snackbar","Paper","Alert","PublicKey","useWallet","WalletDialogButton","awaitTransactionSignatureConfirmation","CANDY_MACHINE_PROGRAM","getCandyMachineState","mintOneToken","Header","MintButton","GatewayProvider","ConnectButton","MintContainer","div","Home","props","isUserMinting","setIsUserMinting","candyMachine","setCandyMachine","open","message","severity","undefined","alertState","setAlertState","rpcUrl","rpcHost","wallet","anchorWallet","publicKey","signAllTransactions","signTransaction","refreshCandyMachineState","candyMachineId","connection","cndy","console","log","onMint","document","getElementById","click","connected","program","mintTxId","status","err","txTimeout","msg","indexOf","code","window","location","reload","marginTop","position","padding","backgroundColor","borderRadius","state","isActive","gatekeeper","gatekeeperNetwork","autoShowModal"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState, useCallback } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\n\r\nimport styled from 'styled-components';\r\nimport { Container, Snackbar } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CandyMachineAccount,\r\n  CANDY_MACHINE_PROGRAM,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n} from './candy-machine';\r\nimport { AlertState } from './utils';\r\nimport { Header } from './Header';\r\nimport { MintButton } from './MintButton';\r\nimport { GatewayProvider } from '@civic/solana-gateway-react';\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MintContainer = styled.div``; // add your owns styles here\r\n\r\nexport interface HomeProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  startDate: number;\r\n  txTimeout: number;\r\n  rpcHost: string;\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const [isUserMinting, setIsUserMinting] = useState(false);\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: '',\r\n    severity: undefined,\r\n  });\r\n\r\n  const rpcUrl = props.rpcHost;\r\n  const wallet = useWallet();\r\n\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  const refreshCandyMachineState = useCallback(async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    if (props.candyMachineId) {\r\n      try {\r\n        const cndy = await getCandyMachineState(\r\n          anchorWallet,\r\n          props.candyMachineId,\r\n          props.connection,\r\n        );\r\n        setCandyMachine(cndy);\r\n      } catch (e) {\r\n        console.log('There was a problem fetching Candy Machine state');\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [anchorWallet, props.candyMachineId, props.connection]);\r\n\r\n  const onMint = async () => {\r\n    try {\r\n      setIsUserMinting(true);\r\n      document.getElementById('#identity')?.click();\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        const mintTxId = (\r\n          await mintOneToken(candyMachine, wallet.publicKey)\r\n        )[0];\r\n\r\n        let status: any = { err: true };\r\n        if (mintTxId) {\r\n          status = await awaitTransactionSignatureConfirmation(\r\n            mintTxId,\r\n            props.txTimeout,\r\n            props.connection,\r\n            true,\r\n          );\r\n        }\r\n\r\n        if (status && !status.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Congratulations! Mint succeeded!',\r\n            severity: 'success',\r\n          });\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Mint failed! Please try again!',\r\n            severity: 'error',\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      let message = error.msg || 'Minting failed! Please try again!';\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = 'Transaction Timeout! Please try again.';\r\n        } else if (error.message.indexOf('0x137')) {\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf('0x135')) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: 'error',\r\n      });\r\n    } finally {\r\n      setIsUserMinting(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshCandyMachineState();\r\n  }, [\r\n    anchorWallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n    refreshCandyMachineState,\r\n  ]);\r\n\r\n  return (\r\n    <Container style={{ marginTop: 100 }}>\r\n      <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\r\n        <Paper\r\n          style={{ padding: 24, backgroundColor: '#151A1F', borderRadius: 6 }}\r\n        >\r\n          {!wallet.connected ? (\r\n            <ConnectButton>Connect Wallet</ConnectButton>\r\n          ) : (\r\n            <>\r\n              <Header candyMachine={candyMachine} />\r\n              <MintContainer>\r\n                {candyMachine?.state.isActive &&\r\n                candyMachine?.state.gatekeeper &&\r\n                wallet.publicKey &&\r\n                wallet.signTransaction ? (\r\n                  <GatewayProvider\r\n                    wallet={{\r\n                      publicKey:\r\n                        wallet.publicKey ||\r\n                        new PublicKey(CANDY_MACHINE_PROGRAM),\r\n                      //@ts-ignore\r\n                      signTransaction: wallet.signTransaction,\r\n                    }}\r\n                    gatekeeperNetwork={\r\n                      candyMachine?.state?.gatekeeper?.gatekeeperNetwork\r\n                    }\r\n                    clusterUrl={rpcUrl}\r\n                    options={{ autoShowModal: false }}\r\n                  >\r\n                    <MintButton\r\n                      candyMachine={candyMachine}\r\n                      isMinting={isUserMinting}\r\n                      onMint={onMint}\r\n                    />\r\n                  </GatewayProvider>\r\n                ) : (\r\n                  <MintButton\r\n                    candyMachine={candyMachine}\r\n                    isMinting={isUserMinting}\r\n                    onMint={onMint}\r\n                  />\r\n                )}\r\n              </MintContainer>\r\n            </>\r\n          )}\r\n        </Paper>\r\n      </Container>\r\n\r\n      <Snackbar\r\n        open={alertState.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setAlertState({ ...alertState, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n          severity={alertState.severity}\r\n        >\r\n          {alertState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}