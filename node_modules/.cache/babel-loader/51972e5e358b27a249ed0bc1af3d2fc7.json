{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport { useGateway } from '../gateway/GatewayContext';\nimport { getButtonText, getIcon, isDisabled } from './IdentityButton.utils';\nconst Button = styled.button`\n  width: 180px;\n  background-color: #282c34;\n  outline: none;\n  border: 1px solid #434343;\n  height: 50px;\n  line-height: 20px;\n  cursor: pointer;\n  position: relative;\n  &:disabled {\n    opacity: 0.7;\n    cursor: default;\n  }\n  &:active {\n    top: 1px;\n  }\n  &:disabled:active {\n    top: 0px;\n  }\n`;\nconst buttonTitleStyle = {\n  color: 'white',\n  fontSize: '16px',\n  paddingLeft: '20px'\n};\nconst buttonStyleLight = {\n  background: '#fff',\n  border: '1px solid #ccc'\n};\nconst buttonTitleStyleLight = {\n  color: '#666666'\n};\nexport var ButtonMode;\n\n(function (ButtonMode) {\n  ButtonMode[ButtonMode[\"LIGHT\"] = 0] = \"LIGHT\";\n  ButtonMode[ButtonMode[\"DARK\"] = 1] = \"DARK\";\n})(ButtonMode || (ButtonMode = {}));\n\nconst IdentityButton = _ref => {\n  let {\n    mode = ButtonMode.DARK\n  } = _ref;\n  const {\n    requestGatewayToken,\n    gatewayStatus\n  } = useGateway();\n  return React.createElement(Button, {\n    onClick: requestGatewayToken,\n    type: \"button\",\n    disabled: isDisabled(gatewayStatus),\n    style: mode === ButtonMode.LIGHT ? Object.assign({}, buttonStyleLight) : {}\n  }, getIcon(gatewayStatus), React.createElement(\"span\", {\n    style: mode === ButtonMode.LIGHT ? Object.assign(Object.assign({}, buttonTitleStyle), buttonTitleStyleLight) : buttonTitleStyle\n  }, getButtonText(gatewayStatus)));\n};\n\nexport default IdentityButton;","map":{"version":3,"sources":["F:/SitePortfolio/skillfond/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/button/IdentityButton.js"],"names":["React","styled","useGateway","getButtonText","getIcon","isDisabled","Button","button","buttonTitleStyle","color","fontSize","paddingLeft","buttonStyleLight","background","border","buttonTitleStyleLight","ButtonMode","IdentityButton","mode","DARK","requestGatewayToken","gatewayStatus","createElement","onClick","type","disabled","style","LIGHT","Object","assign"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,aAAT,EAAwBC,OAAxB,EAAiCC,UAAjC,QAAmD,wBAAnD;AACA,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAoBA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,OADc;AAErBC,EAAAA,QAAQ,EAAE,MAFW;AAGrBC,EAAAA,WAAW,EAAE;AAHQ,CAAzB;AAKA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,UAAU,EAAE,MADS;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAzB;AAIA,MAAMC,qBAAqB,GAAG;AAC1BN,EAAAA,KAAK,EAAE;AADmB,CAA9B;AAGA,OAAO,IAAIO,UAAJ;;AACP,CAAC,UAAUA,UAAV,EAAsB;AACnBA,EAAAA,UAAU,CAACA,UAAU,CAAC,OAAD,CAAV,GAAsB,CAAvB,CAAV,GAAsC,OAAtC;AACAA,EAAAA,UAAU,CAACA,UAAU,CAAC,MAAD,CAAV,GAAqB,CAAtB,CAAV,GAAqC,MAArC;AACH,CAHD,EAGGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAHb;;AAIA,MAAMC,cAAc,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,IAAI,GAAGF,UAAU,CAACG;AAApB,GAA+B;AACnD,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAAyCnB,UAAU,EAAzD;AACA,SAAQF,KAAK,CAACsB,aAAN,CAAoBhB,MAApB,EAA4B;AAAEiB,IAAAA,OAAO,EAAEH,mBAAX;AAAgCI,IAAAA,IAAI,EAAE,QAAtC;AAAgDC,IAAAA,QAAQ,EAAEpB,UAAU,CAACgB,aAAD,CAApE;AAAqFK,IAAAA,KAAK,EAAER,IAAI,KAAKF,UAAU,CAACW,KAApB,GAA4BC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,gBAAlB,CAA5B,GAAkE;AAA9J,GAA5B,EACJR,OAAO,CAACiB,aAAD,CADH,EAEJrB,KAAK,CAACsB,aAAN,CAAoB,MAApB,EAA4B;AAAEI,IAAAA,KAAK,EAAER,IAAI,KAAKF,UAAU,CAACW,KAApB,GAA4BC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,gBAAlB,CAAd,EAAmDO,qBAAnD,CAA5B,GAAwGP;AAAjH,GAA5B,EAAiKL,aAAa,CAACkB,aAAD,CAA9K,CAFI,CAAR;AAGH,CALD;;AAMA,eAAeJ,cAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useGateway } from '../gateway/GatewayContext';\nimport { getButtonText, getIcon, isDisabled } from './IdentityButton.utils';\nconst Button = styled.button `\n  width: 180px;\n  background-color: #282c34;\n  outline: none;\n  border: 1px solid #434343;\n  height: 50px;\n  line-height: 20px;\n  cursor: pointer;\n  position: relative;\n  &:disabled {\n    opacity: 0.7;\n    cursor: default;\n  }\n  &:active {\n    top: 1px;\n  }\n  &:disabled:active {\n    top: 0px;\n  }\n`;\nconst buttonTitleStyle = {\n    color: 'white',\n    fontSize: '16px',\n    paddingLeft: '20px',\n};\nconst buttonStyleLight = {\n    background: '#fff',\n    border: '1px solid #ccc',\n};\nconst buttonTitleStyleLight = {\n    color: '#666666',\n};\nexport var ButtonMode;\n(function (ButtonMode) {\n    ButtonMode[ButtonMode[\"LIGHT\"] = 0] = \"LIGHT\";\n    ButtonMode[ButtonMode[\"DARK\"] = 1] = \"DARK\";\n})(ButtonMode || (ButtonMode = {}));\nconst IdentityButton = ({ mode = ButtonMode.DARK }) => {\n    const { requestGatewayToken, gatewayStatus } = useGateway();\n    return (React.createElement(Button, { onClick: requestGatewayToken, type: \"button\", disabled: isDisabled(gatewayStatus), style: mode === ButtonMode.LIGHT ? Object.assign({}, buttonStyleLight) : {} },\n        getIcon(gatewayStatus),\n        React.createElement(\"span\", { style: mode === ButtonMode.LIGHT ? Object.assign(Object.assign({}, buttonTitleStyle), buttonTitleStyleLight) : buttonTitleStyle }, getButtonText(gatewayStatus))));\n};\nexport default IdentityButton;\n"]},"metadata":{},"sourceType":"module"}