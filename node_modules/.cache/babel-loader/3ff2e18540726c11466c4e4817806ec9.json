{"ast":null,"code":"import'./App.css';import{useMemo}from'react';import*as anchor from'@project-serum/anchor';import Home from'./Home';import{clusterApiUrl}from'@solana/web3.js';import{getPhantomWallet,getSlopeWallet,getSolflareWallet,getSolletWallet,getSolletExtensionWallet}from'@solana/wallet-adapter-wallets';import{ConnectionProvider,WalletProvider}from'@solana/wallet-adapter-react';import{WalletDialogProvider}from'@solana/wallet-adapter-material-ui';import{ThemeProvider,createTheme}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";var theme=createTheme({palette:{type:'dark',primary:{main:'#000'},secondary:{main:\"#FFF\"},background:{paper:\"rgba(55,55,55, .6)\"}},typography:{h1:{fontFamily:'\"Brutal Type\", sans-serif'},h2:{fontFamily:'\"Brutal Type\", sans-serif'},h3:{fontFamily:'\"Brutal Type\", sans-serif'},h4:{fontFamily:'\"Brutal Type\", sans-serif'},h5:{fontFamily:'\"Brutal Type\", sans-serif'},h6:{fontFamily:'\"Brutal Type\", sans-serif'},body1:{fontFamily:'\"Brutal Type\", sans-serif'}},breakpoints:{values:{xs:0,sm:600,md:900,lg:1200,xl:1920}},shape:{borderRadius:0}});var getCandyMachineId=function getCandyMachineId(){try{var _candyMachineId=new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);return _candyMachineId;}catch(e){console.log('Failed to construct CandyMachineId',e);return undefined;}};var candyMachineId=getCandyMachineId();var network=process.env.REACT_APP_SOLANA_NETWORK;var rpcHost=process.env.REACT_APP_SOLANA_RPC_HOST;var connection=new anchor.web3.Connection(rpcHost?rpcHost:anchor.web3.clusterApiUrl('devnet'));var startDateSeed=parseInt(process.env.REACT_APP_CANDY_START_DATE,10);var txTimeoutInMilliseconds=30000;var App=function App(){var endpoint=useMemo(function(){return clusterApiUrl(network);},[]);var wallets=useMemo(function(){return[getPhantomWallet(),getSolflareWallet(),getSlopeWallet(),getSolletWallet({network:network}),getSolletExtensionWallet({network:network})];},[]);return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(ConnectionProvider,{endpoint:endpoint,children:/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,autoConnect:true,children:/*#__PURE__*/_jsx(WalletDialogProvider,{children:/*#__PURE__*/_jsx(Home,{candyMachineId:candyMachineId,connection:connection,startDate:startDateSeed,txTimeout:txTimeoutInMilliseconds,rpcHost:rpcHost})})})})});};export default App;","map":{"version":3,"sources":["F:/SitePortfolio/skillfond/metaplex/js/packages/candy-machine-ui/src/App.tsx"],"names":["useMemo","anchor","Home","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","ThemeProvider","createTheme","theme","palette","type","primary","main","secondary","background","paper","typography","h1","fontFamily","h2","h3","h4","h5","h6","body1","breakpoints","values","xs","sm","md","lg","xl","shape","borderRadius","getCandyMachineId","candyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","e","console","log","undefined","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","txTimeoutInMilliseconds","App","endpoint","wallets"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport { useMemo } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\nimport Home from './Home';\r\n\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\n\r\nimport { ThemeProvider, createTheme } from '@material-ui/core';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#000'\r\n    },\r\n    secondary: {\r\n\t\t\tmain: \"#FFF\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tpaper: \"rgba(55,55,55, .6)\",\r\n\t\t},\r\n  },\r\n  typography: {\r\n\t\th1: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th2: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th3: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th4: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th5: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\th6: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t\tbody1: {\r\n\t\t\tfontFamily: '\"Brutal Type\", sans-serif',\r\n\t\t},\r\n\t},\r\n\tbreakpoints: {\r\n\t\tvalues: {\r\n\t\t\txs: 0,\r\n\t\t\tsm: 600,\r\n\t\t\tmd: 900,\r\n\t\t\tlg: 1200,\r\n\t\t\txl: 1920,\r\n\t\t},\r\n  },\r\n  shape: {\r\n    borderRadius: 0\r\n  },\r\n});\r\n\r\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\r\n  try {\r\n    const candyMachineId = new anchor.web3.PublicKey(\r\n      process.env.REACT_APP_CANDY_MACHINE_ID!,\r\n    );\r\n\r\n    return candyMachineId;\r\n  } catch (e) {\r\n    console.log('Failed to construct CandyMachineId', e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst candyMachineId = getCandyMachineId();\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost\r\n  ? rpcHost\r\n  : anchor.web3.clusterApiUrl('devnet'));\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\nconst txTimeoutInMilliseconds = 30000;\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSlopeWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <Home\r\n              candyMachineId={candyMachineId}\r\n              connection={connection}\r\n              startDate={startDateSeed}\r\n              txTimeout={txTimeoutInMilliseconds}\r\n              rpcHost={rpcHost}\r\n            />\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}