{"ast":null,"code":"// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport React from 'react';\nimport { GatewayStatus } from '../types';\nimport { IconLogo } from './IconLogo';\nimport { IconError } from './IconError';\nimport { IconLoading } from './IconLoading';\nimport { IconSuccess } from './IconSuccess';\nimport { IconWarning } from './IconWarning';\nvar buttonIconStyle = {\n  width: '25px',\n  height: '25px',\n  fill: '#3AB03E',\n  position: 'absolute',\n  left: '15px',\n  top: '10px'\n};\nvar Icon = {\n  LOGO: React.createElement(IconLogo, {\n    style: buttonIconStyle\n  }),\n  ERROR: React.createElement(IconError, {\n    style: buttonIconStyle\n  }),\n  SPINNER: React.createElement(IconLoading, {\n    style: buttonIconStyle\n  }),\n  SUCCESS: React.createElement(IconSuccess, {\n    style: buttonIconStyle\n  }),\n  WARNING: React.createElement(IconWarning, {\n    style: buttonIconStyle\n  })\n}; // eslint-disable-next-line import/prefer-default-export\n\nexport var getIcon = function getIcon(status) {\n  switch (status) {\n    case GatewayStatus.IN_REVIEW:\n    case GatewayStatus.CHECKING:\n    case GatewayStatus.COLLECTING_USER_INFORMATION:\n      return Icon.SPINNER;\n\n    case GatewayStatus.ACTIVE:\n      return Icon.LOGO;\n\n    case GatewayStatus.REFRESH_TOKEN_REQUIRED:\n    case GatewayStatus.FROZEN:\n    case GatewayStatus.REJECTED:\n    case GatewayStatus.REVOKED:\n    case GatewayStatus.FAILED:\n    case GatewayStatus.LOCATION_NOT_SUPPORTED:\n      return Icon.WARNING;\n\n    case GatewayStatus.ERROR:\n      return Icon.ERROR;\n\n    default:\n      return Icon.LOGO;\n  }\n};\nexport var getButtonText = function getButtonText(status) {\n  switch (status) {\n    case GatewayStatus.IN_REVIEW:\n      return 'Reviewing';\n\n    case GatewayStatus.CHECKING:\n    case GatewayStatus.COLLECTING_USER_INFORMATION:\n      return 'Collecting';\n\n    case GatewayStatus.ACTIVE:\n      return 'Active';\n\n    case GatewayStatus.FROZEN:\n    case GatewayStatus.REJECTED:\n    case GatewayStatus.REVOKED:\n    case GatewayStatus.FAILED:\n      return 'Attention';\n\n    case GatewayStatus.ERROR:\n      return 'Error';\n\n    case GatewayStatus.PROOF_OF_WALLET_OWNERSHIP:\n      return 'Confirm';\n\n    case GatewayStatus.LOCATION_NOT_SUPPORTED:\n      return 'Not supported';\n\n    default:\n      return 'Identity';\n  }\n};\nexport var isDisabled = function isDisabled(state) {\n  return state === GatewayStatus.CHECKING;\n};\nexport var getTokenDescription = function getTokenDescription(status) {\n  switch (status) {\n    case GatewayStatus.CHECKING:\n      return 'The blockchain is being queried to find an existing Civic Pass.';\n\n    case GatewayStatus.NOT_REQUESTED:\n      return 'A Civic Pass has not been requested.';\n\n    case GatewayStatus.COLLECTING_USER_INFORMATION:\n      return 'The information required for the issuance of your Civic Pass is being collected.';\n\n    case GatewayStatus.IN_REVIEW:\n      return 'Your Civic Pass is pending review.';\n\n    case GatewayStatus.FAILED:\n      return 'An error occurred while issuing your Civic Pass.';\n\n    case GatewayStatus.REJECTED:\n      return 'Your Civic Pass request was rejected';\n\n    case GatewayStatus.REVOKED:\n      return 'Your Civic Pass has been revoked. Please contact support.';\n\n    case GatewayStatus.FROZEN:\n      return 'Your Civic Pass has been frozen. Please contact support.';\n\n    case GatewayStatus.ACTIVE:\n      return 'Your Civic Pass is currently active.';\n\n    case GatewayStatus.ERROR:\n      return 'Something went wrong, please try again.';\n\n    case GatewayStatus.PROOF_OF_WALLET_OWNERSHIP:\n      return 'Please confirm wallet ownership by tapping on the button again';\n\n    case GatewayStatus.LOCATION_NOT_SUPPORTED:\n      return 'Your location is not supported at this time';\n\n    default:\n      return 'Your Civic Pass is in an unknown state.';\n  }\n};","map":{"version":3,"sources":["C:/Test Mint/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/button/IdentityButton.utils.js"],"names":["React","GatewayStatus","IconLogo","IconError","IconLoading","IconSuccess","IconWarning","buttonIconStyle","width","height","fill","position","left","top","Icon","LOGO","createElement","style","ERROR","SPINNER","SUCCESS","WARNING","getIcon","status","IN_REVIEW","CHECKING","COLLECTING_USER_INFORMATION","ACTIVE","REFRESH_TOKEN_REQUIRED","FROZEN","REJECTED","REVOKED","FAILED","LOCATION_NOT_SUPPORTED","getButtonText","PROOF_OF_WALLET_OWNERSHIP","isDisabled","state","getTokenDescription","NOT_REQUESTED"],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport React from 'react';\nimport { GatewayStatus } from '../types';\nimport { IconLogo } from './IconLogo';\nimport { IconError } from './IconError';\nimport { IconLoading } from './IconLoading';\nimport { IconSuccess } from './IconSuccess';\nimport { IconWarning } from './IconWarning';\nconst buttonIconStyle = {\n    width: '25px',\n    height: '25px',\n    fill: '#3AB03E',\n    position: 'absolute',\n    left: '15px',\n    top: '10px',\n};\nconst Icon = {\n    LOGO: React.createElement(IconLogo, { style: buttonIconStyle }),\n    ERROR: React.createElement(IconError, { style: buttonIconStyle }),\n    SPINNER: React.createElement(IconLoading, { style: buttonIconStyle }),\n    SUCCESS: React.createElement(IconSuccess, { style: buttonIconStyle }),\n    WARNING: React.createElement(IconWarning, { style: buttonIconStyle }),\n};\n// eslint-disable-next-line import/prefer-default-export\nexport const getIcon = (status) => {\n    switch (status) {\n        case GatewayStatus.IN_REVIEW:\n        case GatewayStatus.CHECKING:\n        case GatewayStatus.COLLECTING_USER_INFORMATION:\n            return Icon.SPINNER;\n        case GatewayStatus.ACTIVE:\n            return Icon.LOGO;\n        case GatewayStatus.REFRESH_TOKEN_REQUIRED:\n        case GatewayStatus.FROZEN:\n        case GatewayStatus.REJECTED:\n        case GatewayStatus.REVOKED:\n        case GatewayStatus.FAILED:\n        case GatewayStatus.LOCATION_NOT_SUPPORTED:\n            return Icon.WARNING;\n        case GatewayStatus.ERROR:\n            return Icon.ERROR;\n        default:\n            return Icon.LOGO;\n    }\n};\nexport const getButtonText = (status) => {\n    switch (status) {\n        case GatewayStatus.IN_REVIEW:\n            return 'Reviewing';\n        case GatewayStatus.CHECKING:\n        case GatewayStatus.COLLECTING_USER_INFORMATION:\n            return 'Collecting';\n        case GatewayStatus.ACTIVE:\n            return 'Active';\n        case GatewayStatus.FROZEN:\n        case GatewayStatus.REJECTED:\n        case GatewayStatus.REVOKED:\n        case GatewayStatus.FAILED:\n            return 'Attention';\n        case GatewayStatus.ERROR:\n            return 'Error';\n        case GatewayStatus.PROOF_OF_WALLET_OWNERSHIP:\n            return 'Confirm';\n        case GatewayStatus.LOCATION_NOT_SUPPORTED:\n            return 'Not supported';\n        default:\n            return 'Identity';\n    }\n};\nexport const isDisabled = (state) => {\n    return state === GatewayStatus.CHECKING;\n};\nexport const getTokenDescription = (status) => {\n    switch (status) {\n        case GatewayStatus.CHECKING:\n            return 'The blockchain is being queried to find an existing Civic Pass.';\n        case GatewayStatus.NOT_REQUESTED:\n            return 'A Civic Pass has not been requested.';\n        case GatewayStatus.COLLECTING_USER_INFORMATION:\n            return 'The information required for the issuance of your Civic Pass is being collected.';\n        case GatewayStatus.IN_REVIEW:\n            return 'Your Civic Pass is pending review.';\n        case GatewayStatus.FAILED:\n            return 'An error occurred while issuing your Civic Pass.';\n        case GatewayStatus.REJECTED:\n            return 'Your Civic Pass request was rejected';\n        case GatewayStatus.REVOKED:\n            return 'Your Civic Pass has been revoked. Please contact support.';\n        case GatewayStatus.FROZEN:\n            return 'Your Civic Pass has been frozen. Please contact support.';\n        case GatewayStatus.ACTIVE:\n            return 'Your Civic Pass is currently active.';\n        case GatewayStatus.ERROR:\n            return 'Something went wrong, please try again.';\n        case GatewayStatus.PROOF_OF_WALLET_OWNERSHIP:\n            return 'Please confirm wallet ownership by tapping on the button again';\n        case GatewayStatus.LOCATION_NOT_SUPPORTED:\n            return 'Your location is not supported at this time';\n        default:\n            return 'Your Civic Pass is in an unknown state.';\n    }\n};\n"]},"metadata":{},"sourceType":"module"}